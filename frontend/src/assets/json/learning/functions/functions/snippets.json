
  {
    "purefunc1": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">function</span> pureFunc1(a: <span style=\"color: #000080; font-weight: bold\">number</span>, b: <span style=\"color: #000080; font-weight: bold\">number</span>): <span style=\"color: #000080; font-weight: bold\">number</span> {\n      <span style=\"color: #008800; font-style: italic\">// this is pure func because we always have the same result with the same arguments</span>\n      <span style=\"color: #000080; font-weight: bold\">return</span> a + b;\n    }\n\n    pureFunc1(<span style=\"color: #0000FF\">1</span>,<span style=\"color: #0000FF\">5</span>)\n    pureFunc1(<span style=\"color: #0000FF\">3</span>,<span style=\"color: #0000FF\">5</span>)\n</pre></td></tr></table></div>\n",
    "purefunc2": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7\n8</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">function</span> pureFunc2(a: <span style=\"color: #000080; font-weight: bold\">number</span>, b: <span style=\"color: #000080; font-weight: bold\">number</span>): <span style=\"color: #000080; font-weight: bold\">number</span> {\n      <span style=\"color: #000080; font-weight: bold\">let</span> innerNumb = <span style=\"color: #0000FF\">155</span>\n      <span style=\"color: #008800; font-style: italic\">// this is pure func because the inner extra variable is a constant and we can predict the result of this func</span>\n      <span style=\"color: #000080; font-weight: bold\">return</span> a + b + innerNumb;\n    }\n\n    pureFunc2(<span style=\"color: #0000FF\">1</span>,<span style=\"color: #0000FF\">5</span>)\n    pureFunc2(<span style=\"color: #0000FF\">3</span>,<span style=\"color: #0000FF\">5</span>)\n</pre></td></tr></table></div>\n",

    "unpurefunc1": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7\n8</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">let</span> externalNumber = <span style=\"color: #0000FF\">5</span>\n    <span style=\"color: #000080; font-weight: bold\">function</span> unPureFunc1(a: <span style=\"color: #000080; font-weight: bold\">number</span>, b: <span style=\"color: #000080; font-weight: bold\">number</span>): <span style=\"color: #000080; font-weight: bold\">number</span> {\n      <span style=\"color: #008800; font-style: italic\">// this is not a pure func because we have external variable that may be changed in the future</span>\n      <span style=\"color: #000080; font-weight: bold\">return</span> a + b + externalNumber;\n    }\n\n    unPureFunc1(<span style=\"color: #0000FF\">1</span>,<span style=\"color: #0000FF\">5</span>)\n    unPureFunc1(<span style=\"color: #0000FF\">3</span>,<span style=\"color: #0000FF\">5</span>)\n</pre></td></tr></table></div>\n",
    "unpurefunc2": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7\n8</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">function</span> unPureFunc2(a: <span style=\"color: #000080; font-weight: bold\">number</span>, b: <span style=\"color: #000080; font-weight: bold\">number</span>): <span style=\"color: #000080; font-weight: bold\">number</span> {\n      <span style=\"color: #000080; font-weight: bold\">let</span> random = Math.random()\n      <span style=\"color: #008800; font-style: italic\">// this is also a not pure func even with internal variable because we don&#39;t know the exact result</span>\n      <span style=\"color: #000080; font-weight: bold\">return</span> a + b + random;\n    }\n\n    unPureFunc2(<span style=\"color: #0000FF\">1</span>,<span style=\"color: #0000FF\">5</span>)\n    unPureFunc2(<span style=\"color: #0000FF\">3</span>,<span style=\"color: #0000FF\">5</span>)\n</pre></td></tr></table></div>\n",
    "unpurefunc3": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7\n8</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">function</span> unPureFunc3(array: <span style=\"color: #000080; font-weight: bold\">string</span>[]): <span style=\"color: #000080; font-weight: bold\">string</span> {\n      array.push(<span style=\"color: #0000FF\">&#39;z&#39;</span>)\n      <span style=\"color: #008800; font-style: italic\">// this is not a pure func because we mutate origin array with new array element. Then if we return</span>\n      <span style=\"color: #000080; font-weight: bold\">return</span> array[-<span style=\"color: #0000FF\">1</span>]\n    }\n\n    unPureFunc3([<span style=\"color: #0000FF\">&#39;a&#39;</span>, <span style=\"color: #0000FF\">&#39;b&#39;</span>, <span style=\"color: #0000FF\">&#39;c&#39;</span>])\n    unPureFunc3([<span style=\"color: #0000FF\">&#39;d&#39;</span>, <span style=\"color: #0000FF\">&#39;e&#39;</span>, <span style=\"color: #0000FF\">&#39;f&#39;</span>])\n</pre></td></tr></table></div>\n",
    "unpurefunc4": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\">1\n2\n3\n4\n5\n6\n7</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">function</span> unPureFunc4(<span style=\"color: #000080; font-weight: bold\">number</span>: <span style=\"color: #000080; font-weight: bold\">number</span>): <span style=\"color: #000080; font-weight: bold\">void</span> {\n      <span style=\"color: #000080; font-weight: bold\">let</span> total = <span style=\"color: #000080; font-weight: bold\">number</span> + <span style=\"color: #0000FF\">100</span>\n      <span style=\"color: #008800; font-style: italic\">// this is not a pure func because there is side effect: console.log instead of returning data</span>\n      console.log(total)\n    }\n\n    unPureFunc4(<span style=\"color: #0000FF\">147</span>)\n</pre></td></tr></table></div>\n",
    "unpurefunc5": "<!-- HTML generated using hilite.me --><div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\"><table><tr><td><pre style=\"margin: 0; line-height: 125%\"> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11</pre></td><td><pre style=\"margin: 0; line-height: 125%\">    <span style=\"color: #000080; font-weight: bold\">const</span> exampleData = {<span style=\"color: #0000FF\">&quot;users&quot;</span>: [{<span style=\"color: #0000FF\">&quot;name&quot;</span>: <span style=\"color: #0000FF\">&quot;name1&quot;</span>}, {<span style=\"color: #0000FF\">&quot;name&quot;</span>: <span style=\"color: #0000FF\">&quot;name2&quot;</span>}]}\n\n    <span style=\"color: #000080; font-weight: bold\">function</span> unPureFunc5(data: <span style=\"color: #000080; font-weight: bold\">any</span>): any {\n      <span style=\"color: #008800; font-style: italic\">// this is not a pure func because we mutate the original data by adding new [key][value] to data argument</span>\n      <span style=\"color: #008800; font-style: italic\">// instead of this we should create new object to return:</span>\n      <span style=\"color: #008800; font-style: italic\">// return {...data, &quot;newProperty&quot;: [1,2,3,4,5]}</span>\n      data[<span style=\"color: #0000FF\">&#39;newProperty&#39;</span>] = [<span style=\"color: #0000FF\">1</span>,<span style=\"color: #0000FF\">2</span>,<span style=\"color: #0000FF\">3</span>,<span style=\"color: #0000FF\">4</span>,<span style=\"color: #0000FF\">5</span>]\n      <span style=\"color: #000080; font-weight: bold\">return</span> data\n    }\n\n    console.log(<span style=\"color: #0000FF\">&#39;data: &#39;</span>, unPureFunc5(exampleData))\n</pre></td></tr></table></div>\n"


  }
